-- generated by pyha 0.0.7
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;

entity  top is
    port (
        clk, rst_n: in std_logic;

        -- look #153 if you want enable
        enable: in std_logic;

        -- inputs
        in0: in std_logic_vector(35 downto 0);

        -- outputs
        out0: out std_logic_vector(50 downto 0)
    );
end entity;

architecture arch of top is
    -- make reset procedure callable
    function init_regs return Spectrogram_1.self_t is
        variable self: Spectrogram_1.self_t;
    begin
            self.pack.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.pack.\out\.index := 511;
            self.pack.\out\.valid := True;
            self.windower.window_pure := (Sfix(0.0, 0, -17), Sfix(3.814697265625e-05, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(0.00034332275390625, 0, -17), Sfix(0.00060272216796875, 0, -17), Sfix(0.000946044921875, 0, -17), Sfix(0.0013580322265625, 0, -17), Sfix(0.00185394287109375, 0, -17), Sfix(0.00241851806640625, 0, -17), Sfix(0.00305938720703125, 0, -17), Sfix(0.00377655029296875, 0, -17), Sfix(0.00457000732421875, 0, -17), Sfix(0.00543212890625, 0, -17), Sfix(0.00637054443359375, 0, -17), Sfix(0.00739288330078125, 0, -17), Sfix(0.00848388671875, 0, -17), Sfix(0.0096435546875, 0, -17), Sfix(0.01088714599609375, 0, -17), Sfix(0.01219940185546875, 0, -17), Sfix(0.013580322265625, 0, -17), Sfix(0.015045166015625, 0, -17), Sfix(0.01657867431640625, 0, -17), Sfix(0.01818084716796875, 0, -17), Sfix(0.01985931396484375, 0, -17), Sfix(0.02161407470703125, 0, -17), Sfix(0.0234375, 0, -17), Sfix(0.02533721923828125, 0, -17), Sfix(0.02730560302734375, 0, -17), Sfix(0.0293426513671875, 0, -17), Sfix(0.0314483642578125, 0, -17), Sfix(0.03363037109375, 0, -17), Sfix(0.035888671875, 0, -17), Sfix(0.0382080078125, 0, -17), Sfix(0.04059600830078125, 0, -17), Sfix(0.043060302734375, 0, -17), Sfix(0.04559326171875, 0, -17), Sfix(0.048187255859375, 0, -17), Sfix(0.0508575439453125, 0, -17), Sfix(0.05359649658203125, 0, -17), Sfix(0.056396484375, 0, -17), Sfix(0.05926513671875, 0, -17), Sfix(0.06220245361328125, 0, -17), Sfix(0.06520843505859375, 0, -17), Sfix(0.06827545166015625, 0, -17), Sfix(0.0714111328125, 0, -17), Sfix(0.07460784912109375, 0, -17), Sfix(0.0778656005859375, 0, -17), Sfix(0.0811920166015625, 0, -17), Sfix(0.08458709716796875, 0, -17), Sfix(0.08803558349609375, 0, -17), Sfix(0.091552734375, 0, -17), Sfix(0.09513092041015625, 0, -17), Sfix(0.0987701416015625, 0, -17), Sfix(0.10247039794921875, 0, -17), Sfix(0.10622406005859375, 0, -17), Sfix(0.11004638671875, 0, -17), Sfix(0.113922119140625, 0, -17), Sfix(0.11785888671875, 0, -17), Sfix(0.12184906005859375, 0, -17), Sfix(0.1259002685546875, 0, -17), Sfix(0.1300048828125, 0, -17), Sfix(0.1341705322265625, 0, -17), Sfix(0.13838958740234375, 0, -17), Sfix(0.14266204833984375, 0, -17), Sfix(0.1469879150390625, 0, -17), Sfix(0.1513671875, 0, -17), Sfix(0.1558074951171875, 0, -17), Sfix(0.16028594970703125, 0, -17), Sfix(0.164825439453125, 0, -17), Sfix(0.16941070556640625, 0, -17), Sfix(0.17404937744140625, 0, -17), Sfix(0.17873382568359375, 0, -17), Sfix(0.1834716796875, 0, -17), Sfix(0.18825531005859375, 0, -17), Sfix(0.193084716796875, 0, -17), Sfix(0.19795989990234375, 0, -17), Sfix(0.202880859375, 0, -17), Sfix(0.20784759521484375, 0, -17), Sfix(0.212860107421875, 0, -17), Sfix(0.21791839599609375, 0, -17), Sfix(0.22301483154296875, 0, -17), Sfix(0.22815704345703125, 0, -17), Sfix(0.23332977294921875, 0, -17), Sfix(0.238555908203125, 0, -17), Sfix(0.24381256103515625, 0, -17), Sfix(0.249114990234375, 0, -17), Sfix(0.25444793701171875, 0, -17), Sfix(0.25982666015625, 0, -17), Sfix(0.26523590087890625, 0, -17), Sfix(0.27068328857421875, 0, -17), Sfix(0.27616119384765625, 0, -17), Sfix(0.28167724609375, 0, -17), Sfix(0.28722381591796875, 0, -17), Sfix(0.2928009033203125, 0, -17), Sfix(0.29840850830078125, 0, -17), Sfix(0.30405426025390625, 0, -17), Sfix(0.309722900390625, 0, -17), Sfix(0.31542205810546875, 0, -17), Sfix(0.3211517333984375, 0, -17), Sfix(0.326904296875, 0, -17), Sfix(0.3326873779296875, 0, -17), Sfix(0.33849334716796875, 0, -17), Sfix(0.34432220458984375, 0, -17), Sfix(0.3501739501953125, 0, -17), Sfix(0.35605621337890625, 0, -17), Sfix(0.3619537353515625, 0, -17), Sfix(0.3678741455078125, 0, -17), Sfix(0.373809814453125, 0, -17), Sfix(0.37976837158203125, 0, -17), Sfix(0.3857421875, 0, -17), Sfix(0.3917388916015625, 0, -17), Sfix(0.3977508544921875, 0, -17), Sfix(0.40377044677734375, 0, -17), Sfix(0.40981292724609375, 0, -17), Sfix(0.41587066650390625, 0, -17), Sfix(0.42193603515625, 0, -17), Sfix(0.42801666259765625, 0, -17), Sfix(0.43410491943359375, 0, -17), Sfix(0.4402008056640625, 0, -17), Sfix(0.44631195068359375, 0, -17), Sfix(0.452423095703125, 0, -17), Sfix(0.45854949951171875, 0, -17), Sfix(0.4646759033203125, 0, -17), Sfix(0.47081756591796875, 0, -17), Sfix(0.47695159912109375, 0, -17), Sfix(0.48309326171875, 0, -17), Sfix(0.4892425537109375, 0, -17), Sfix(0.495391845703125, 0, -17), Sfix(0.5015335083007812, 0, -17), Sfix(0.5076828002929688, 0, -17), Sfix(0.5138320922851562, 0, -17), Sfix(0.5199737548828125, 0, -17), Sfix(0.5261154174804688, 0, -17), Sfix(0.532257080078125, 0, -17), Sfix(0.5383834838867188, 0, -17), Sfix(0.5445098876953125, 0, -17), Sfix(0.5506362915039062, 0, -17), Sfix(0.5567474365234375, 0, -17), Sfix(0.5628509521484375, 0, -17), Sfix(0.5689468383789062, 0, -17), Sfix(0.5750274658203125, 0, -17), Sfix(0.5811004638671875, 0, -17), Sfix(0.587158203125, 0, -17), Sfix(0.5932083129882812, 0, -17), Sfix(0.5992431640625, 0, -17), Sfix(0.605255126953125, 0, -17), Sfix(0.6112594604492188, 0, -17), Sfix(0.61724853515625, 0, -17), Sfix(0.6232147216796875, 0, -17), Sfix(0.6291656494140625, 0, -17), Sfix(0.6350936889648438, 0, -17), Sfix(0.6409988403320312, 0, -17), Sfix(0.6468887329101562, 0, -17), Sfix(0.6527557373046875, 0, -17), Sfix(0.6585922241210938, 0, -17), Sfix(0.6644134521484375, 0, -17), Sfix(0.6702041625976562, 0, -17), Sfix(0.6759719848632812, 0, -17), Sfix(0.6817169189453125, 0, -17), Sfix(0.6874313354492188, 0, -17), Sfix(0.693115234375, 0, -17), Sfix(0.6987686157226562, 0, -17), Sfix(0.7043991088867188, 0, -17), Sfix(0.709991455078125, 0, -17), Sfix(0.7155532836914062, 0, -17), Sfix(0.7210845947265625, 0, -17), Sfix(0.7265853881835938, 0, -17), Sfix(0.7320480346679688, 0, -17), Sfix(0.7374725341796875, 0, -17), Sfix(0.7428665161132812, 0, -17), Sfix(0.7482223510742188, 0, -17), Sfix(0.7535400390625, 0, -17), Sfix(0.758819580078125, 0, -17), Sfix(0.7640609741210938, 0, -17), Sfix(0.7692642211914062, 0, -17), Sfix(0.7744216918945312, 0, -17), Sfix(0.779541015625, 0, -17), Sfix(0.7846145629882812, 0, -17), Sfix(0.7896499633789062, 0, -17), Sfix(0.7946395874023438, 0, -17), Sfix(0.7995834350585938, 0, -17), Sfix(0.8044815063476562, 0, -17), Sfix(0.8093338012695312, 0, -17), Sfix(0.8141403198242188, 0, -17), Sfix(0.8189010620117188, 0, -17), Sfix(0.8236160278320312, 0, -17), Sfix(0.828277587890625, 0, -17), Sfix(0.8328857421875, 0, -17), Sfix(0.8374481201171875, 0, -17), Sfix(0.8419570922851562, 0, -17), Sfix(0.8464202880859375, 0, -17), Sfix(0.8508224487304688, 0, -17), Sfix(0.8551788330078125, 0, -17), Sfix(0.8594818115234375, 0, -17), Sfix(0.8637237548828125, 0, -17), Sfix(0.867919921875, 0, -17), Sfix(0.8720550537109375, 0, -17), Sfix(0.876129150390625, 0, -17), Sfix(0.8801498413085938, 0, -17), Sfix(0.8841171264648438, 0, -17), Sfix(0.8880233764648438, 0, -17), Sfix(0.8918685913085938, 0, -17), Sfix(0.895660400390625, 0, -17), Sfix(0.8993911743164062, 0, -17), Sfix(0.9030609130859375, 0, -17), Sfix(0.9066619873046875, 0, -17), Sfix(0.9102096557617188, 0, -17), Sfix(0.9136962890625, 0, -17), Sfix(0.9171142578125, 0, -17), Sfix(0.9204788208007812, 0, -17), Sfix(0.92376708984375, 0, -17), Sfix(0.927001953125, 0, -17), Sfix(0.9301681518554688, 0, -17), Sfix(0.9332656860351562, 0, -17), Sfix(0.9363021850585938, 0, -17), Sfix(0.9392776489257812, 0, -17), Sfix(0.9421768188476562, 0, -17), Sfix(0.9450149536132812, 0, -17), Sfix(0.947784423828125, 0, -17), Sfix(0.9504852294921875, 0, -17), Sfix(0.9531173706054688, 0, -17), Sfix(0.9556808471679688, 0, -17), Sfix(0.9581756591796875, 0, -17), Sfix(0.960601806640625, 0, -17), Sfix(0.9629592895507812, 0, -17), Sfix(0.9652481079101562, 0, -17), Sfix(0.96746826171875, 0, -17), Sfix(0.9696121215820312, 0, -17), Sfix(0.9716873168945312, 0, -17), Sfix(0.97369384765625, 0, -17), Sfix(0.9756240844726562, 0, -17), Sfix(0.9774856567382812, 0, -17), Sfix(0.9792709350585938, 0, -17), Sfix(0.980987548828125, 0, -17), Sfix(0.9826278686523438, 0, -17), Sfix(0.9841995239257812, 0, -17), Sfix(0.9856948852539062, 0, -17), Sfix(0.98712158203125, 0, -17), Sfix(0.9884719848632812, 0, -17), Sfix(0.98974609375, 0, -17), Sfix(0.9909439086914062, 0, -17), Sfix(0.9920730590820312, 0, -17), Sfix(0.9931259155273438, 0, -17), Sfix(0.9941024780273438, 0, -17), Sfix(0.9950103759765625, 0, -17), Sfix(0.9958419799804688, 0, -17), Sfix(0.9965896606445312, 0, -17), Sfix(0.9972686767578125, 0, -17), Sfix(0.9978790283203125, 0, -17), Sfix(0.9984054565429688, 0, -17), Sfix(0.9988555908203125, 0, -17), Sfix(0.999237060546875, 0, -17), Sfix(0.9995346069335938, 0, -17), Sfix(0.9997634887695312, 0, -17), Sfix(0.9999160766601562, 0, -17), Sfix(0.9999923706054688, 0, -17), Sfix(0.9999923706054688, 0, -17), Sfix(0.9999160766601562, 0, -17), Sfix(0.9997634887695312, 0, -17), Sfix(0.9995346069335938, 0, -17), Sfix(0.999237060546875, 0, -17), Sfix(0.9988555908203125, 0, -17), Sfix(0.9984054565429688, 0, -17), Sfix(0.9978790283203125, 0, -17), Sfix(0.9972686767578125, 0, -17), Sfix(0.9965896606445312, 0, -17), Sfix(0.9958419799804688, 0, -17), Sfix(0.9950103759765625, 0, -17), Sfix(0.9941024780273438, 0, -17), Sfix(0.9931259155273438, 0, -17), Sfix(0.9920730590820312, 0, -17), Sfix(0.9909439086914062, 0, -17), Sfix(0.98974609375, 0, -17), Sfix(0.9884719848632812, 0, -17), Sfix(0.98712158203125, 0, -17), Sfix(0.9856948852539062, 0, -17), Sfix(0.9841995239257812, 0, -17), Sfix(0.9826278686523438, 0, -17), Sfix(0.980987548828125, 0, -17), Sfix(0.9792709350585938, 0, -17), Sfix(0.9774856567382812, 0, -17), Sfix(0.9756240844726562, 0, -17), Sfix(0.97369384765625, 0, -17), Sfix(0.9716873168945312, 0, -17), Sfix(0.9696121215820312, 0, -17), Sfix(0.96746826171875, 0, -17), Sfix(0.9652481079101562, 0, -17), Sfix(0.9629592895507812, 0, -17), Sfix(0.960601806640625, 0, -17), Sfix(0.9581756591796875, 0, -17), Sfix(0.9556808471679688, 0, -17), Sfix(0.9531173706054688, 0, -17), Sfix(0.9504852294921875, 0, -17), Sfix(0.947784423828125, 0, -17), Sfix(0.9450149536132812, 0, -17), Sfix(0.9421768188476562, 0, -17), Sfix(0.9392776489257812, 0, -17), Sfix(0.9363021850585938, 0, -17), Sfix(0.9332656860351562, 0, -17), Sfix(0.9301681518554688, 0, -17), Sfix(0.927001953125, 0, -17), Sfix(0.92376708984375, 0, -17), Sfix(0.9204788208007812, 0, -17), Sfix(0.9171142578125, 0, -17), Sfix(0.9136962890625, 0, -17), Sfix(0.9102096557617188, 0, -17), Sfix(0.9066619873046875, 0, -17), Sfix(0.9030609130859375, 0, -17), Sfix(0.8993911743164062, 0, -17), Sfix(0.895660400390625, 0, -17), Sfix(0.8918685913085938, 0, -17), Sfix(0.8880233764648438, 0, -17), Sfix(0.8841171264648438, 0, -17), Sfix(0.8801498413085938, 0, -17), Sfix(0.876129150390625, 0, -17), Sfix(0.8720550537109375, 0, -17), Sfix(0.867919921875, 0, -17), Sfix(0.8637237548828125, 0, -17), Sfix(0.8594818115234375, 0, -17), Sfix(0.8551788330078125, 0, -17), Sfix(0.8508224487304688, 0, -17), Sfix(0.8464202880859375, 0, -17), Sfix(0.8419570922851562, 0, -17), Sfix(0.8374481201171875, 0, -17), Sfix(0.8328857421875, 0, -17), Sfix(0.828277587890625, 0, -17), Sfix(0.8236160278320312, 0, -17), Sfix(0.8189010620117188, 0, -17), Sfix(0.8141403198242188, 0, -17), Sfix(0.8093338012695312, 0, -17), Sfix(0.8044815063476562, 0, -17), Sfix(0.7995834350585938, 0, -17), Sfix(0.7946395874023438, 0, -17), Sfix(0.7896499633789062, 0, -17), Sfix(0.7846145629882812, 0, -17), Sfix(0.779541015625, 0, -17), Sfix(0.7744216918945312, 0, -17), Sfix(0.7692642211914062, 0, -17), Sfix(0.7640609741210938, 0, -17), Sfix(0.758819580078125, 0, -17), Sfix(0.7535400390625, 0, -17), Sfix(0.7482223510742188, 0, -17), Sfix(0.7428665161132812, 0, -17), Sfix(0.7374725341796875, 0, -17), Sfix(0.7320480346679688, 0, -17), Sfix(0.7265853881835938, 0, -17), Sfix(0.7210845947265625, 0, -17), Sfix(0.7155532836914062, 0, -17), Sfix(0.709991455078125, 0, -17), Sfix(0.7043991088867188, 0, -17), Sfix(0.6987686157226562, 0, -17), Sfix(0.693115234375, 0, -17), Sfix(0.6874313354492188, 0, -17), Sfix(0.6817169189453125, 0, -17), Sfix(0.6759719848632812, 0, -17), Sfix(0.6702041625976562, 0, -17), Sfix(0.6644134521484375, 0, -17), Sfix(0.6585922241210938, 0, -17), Sfix(0.6527557373046875, 0, -17), Sfix(0.6468887329101562, 0, -17), Sfix(0.6409988403320312, 0, -17), Sfix(0.6350936889648438, 0, -17), Sfix(0.6291656494140625, 0, -17), Sfix(0.6232147216796875, 0, -17), Sfix(0.61724853515625, 0, -17), Sfix(0.6112594604492188, 0, -17), Sfix(0.605255126953125, 0, -17), Sfix(0.5992431640625, 0, -17), Sfix(0.5932083129882812, 0, -17), Sfix(0.587158203125, 0, -17), Sfix(0.5811004638671875, 0, -17), Sfix(0.5750274658203125, 0, -17), Sfix(0.5689468383789062, 0, -17), Sfix(0.5628509521484375, 0, -17), Sfix(0.5567474365234375, 0, -17), Sfix(0.5506362915039062, 0, -17), Sfix(0.5445098876953125, 0, -17), Sfix(0.5383834838867188, 0, -17), Sfix(0.532257080078125, 0, -17), Sfix(0.5261154174804688, 0, -17), Sfix(0.5199737548828125, 0, -17), Sfix(0.5138320922851562, 0, -17), Sfix(0.5076828002929688, 0, -17), Sfix(0.5015335083007812, 0, -17), Sfix(0.495391845703125, 0, -17), Sfix(0.4892425537109375, 0, -17), Sfix(0.48309326171875, 0, -17), Sfix(0.47695159912109375, 0, -17), Sfix(0.47081756591796875, 0, -17), Sfix(0.4646759033203125, 0, -17), Sfix(0.45854949951171875, 0, -17), Sfix(0.452423095703125, 0, -17), Sfix(0.44631195068359375, 0, -17), Sfix(0.4402008056640625, 0, -17), Sfix(0.43410491943359375, 0, -17), Sfix(0.42801666259765625, 0, -17), Sfix(0.42193603515625, 0, -17), Sfix(0.41587066650390625, 0, -17), Sfix(0.40981292724609375, 0, -17), Sfix(0.40377044677734375, 0, -17), Sfix(0.3977508544921875, 0, -17), Sfix(0.3917388916015625, 0, -17), Sfix(0.3857421875, 0, -17), Sfix(0.37976837158203125, 0, -17), Sfix(0.373809814453125, 0, -17), Sfix(0.3678741455078125, 0, -17), Sfix(0.3619537353515625, 0, -17), Sfix(0.35605621337890625, 0, -17), Sfix(0.3501739501953125, 0, -17), Sfix(0.34432220458984375, 0, -17), Sfix(0.33849334716796875, 0, -17), Sfix(0.3326873779296875, 0, -17), Sfix(0.326904296875, 0, -17), Sfix(0.3211517333984375, 0, -17), Sfix(0.31542205810546875, 0, -17), Sfix(0.309722900390625, 0, -17), Sfix(0.30405426025390625, 0, -17), Sfix(0.29840850830078125, 0, -17), Sfix(0.2928009033203125, 0, -17), Sfix(0.28722381591796875, 0, -17), Sfix(0.28167724609375, 0, -17), Sfix(0.27616119384765625, 0, -17), Sfix(0.27068328857421875, 0, -17), Sfix(0.26523590087890625, 0, -17), Sfix(0.25982666015625, 0, -17), Sfix(0.25444793701171875, 0, -17), Sfix(0.249114990234375, 0, -17), Sfix(0.24381256103515625, 0, -17), Sfix(0.238555908203125, 0, -17), Sfix(0.23332977294921875, 0, -17), Sfix(0.22815704345703125, 0, -17), Sfix(0.22301483154296875, 0, -17), Sfix(0.21791839599609375, 0, -17), Sfix(0.212860107421875, 0, -17), Sfix(0.20784759521484375, 0, -17), Sfix(0.202880859375, 0, -17), Sfix(0.19795989990234375, 0, -17), Sfix(0.193084716796875, 0, -17), Sfix(0.18825531005859375, 0, -17), Sfix(0.1834716796875, 0, -17), Sfix(0.17873382568359375, 0, -17), Sfix(0.17404937744140625, 0, -17), Sfix(0.16941070556640625, 0, -17), Sfix(0.164825439453125, 0, -17), Sfix(0.16028594970703125, 0, -17), Sfix(0.1558074951171875, 0, -17), Sfix(0.1513671875, 0, -17), Sfix(0.1469879150390625, 0, -17), Sfix(0.14266204833984375, 0, -17), Sfix(0.13838958740234375, 0, -17), Sfix(0.1341705322265625, 0, -17), Sfix(0.1300048828125, 0, -17), Sfix(0.1259002685546875, 0, -17), Sfix(0.12184906005859375, 0, -17), Sfix(0.11785888671875, 0, -17), Sfix(0.113922119140625, 0, -17), Sfix(0.11004638671875, 0, -17), Sfix(0.10622406005859375, 0, -17), Sfix(0.10247039794921875, 0, -17), Sfix(0.0987701416015625, 0, -17), Sfix(0.09513092041015625, 0, -17), Sfix(0.091552734375, 0, -17), Sfix(0.08803558349609375, 0, -17), Sfix(0.08458709716796875, 0, -17), Sfix(0.0811920166015625, 0, -17), Sfix(0.0778656005859375, 0, -17), Sfix(0.07460784912109375, 0, -17), Sfix(0.0714111328125, 0, -17), Sfix(0.06827545166015625, 0, -17), Sfix(0.06520843505859375, 0, -17), Sfix(0.06220245361328125, 0, -17), Sfix(0.05926513671875, 0, -17), Sfix(0.056396484375, 0, -17), Sfix(0.05359649658203125, 0, -17), Sfix(0.0508575439453125, 0, -17), Sfix(0.048187255859375, 0, -17), Sfix(0.04559326171875, 0, -17), Sfix(0.043060302734375, 0, -17), Sfix(0.04059600830078125, 0, -17), Sfix(0.0382080078125, 0, -17), Sfix(0.035888671875, 0, -17), Sfix(0.03363037109375, 0, -17), Sfix(0.0314483642578125, 0, -17), Sfix(0.0293426513671875, 0, -17), Sfix(0.02730560302734375, 0, -17), Sfix(0.02533721923828125, 0, -17), Sfix(0.0234375, 0, -17), Sfix(0.02161407470703125, 0, -17), Sfix(0.01985931396484375, 0, -17), Sfix(0.01818084716796875, 0, -17), Sfix(0.01657867431640625, 0, -17), Sfix(0.015045166015625, 0, -17), Sfix(0.013580322265625, 0, -17), Sfix(0.01219940185546875, 0, -17), Sfix(0.01088714599609375, 0, -17), Sfix(0.0096435546875, 0, -17), Sfix(0.00848388671875, 0, -17), Sfix(0.00739288330078125, 0, -17), Sfix(0.00637054443359375, 0, -17), Sfix(0.00543212890625, 0, -17), Sfix(0.00457000732421875, 0, -17), Sfix(0.00377655029296875, 0, -17), Sfix(0.00305938720703125, 0, -17), Sfix(0.00241851806640625, 0, -17), Sfix(0.00185394287109375, 0, -17), Sfix(0.0013580322265625, 0, -17), Sfix(0.000946044921875, 0, -17), Sfix(0.00060272216796875, 0, -17), Sfix(0.00034332275390625, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(3.814697265625e-05, 0, -17), Sfix(0.0, 0, -17));
            self.windower.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.windower.\out\.index := 0;
            self.windower.\out\.valid := True;
            self.fft.stages_0.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_0.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_0.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_1.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_1.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_1.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_2.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_2.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_2.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_3.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_3.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_3.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_4.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_4.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_4.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_5.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_5.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_5.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_6.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_6.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_6.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_7.shr.data := (Complex(0.0, 0.0, 0, -17), Complex(0.0, 0.0, 0, -17));
            self.fft.stages_7.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_7.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_8.shr.data(0) := (Complex(0.0, 0.0, 0, -17));
            self.fft.stages_8.shr.to_push := Complex(0.0, 0.0, 0, -17);
            self.fft.stages_8.\out\ := Complex(0.0, 0.0, 0, -17);
            self.fft.\out\.data := Complex(0.0, 0.0, 0, -17);
            self.fft.\out\.index := 0;
            self.fft.\out\.valid := True;
            self.\abs\.\out\.data := Sfix(0.0, 0, -17);
            self.\abs\.\out\.index := 0;
            self.\abs\.\out\.valid := True;
            self.dec.state := True;
            self.dec.mem0.data := (Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17));
            self.dec.mem0.write_value := Sfix(0.0, 2, -17);
            self.dec.mem0.write_enable := False;
            self.dec.mem0.write_address := 0;
            self.dec.mem0.read_reg := Sfix(0.0, 2, -17);
            self.dec.mem0.read_address := 0;
            self.dec.mem1.data := (Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17), Sfix(0.0, 2, -17));
            self.dec.mem1.write_value := Sfix(0.0, 2, -17);
            self.dec.mem1.write_enable := False;
            self.dec.mem1.write_address := 0;
            self.dec.mem1.read_reg := Sfix(0.0, 2, -17);
            self.dec.mem1.read_address := 0;
            self.dec.\out\.data := Sfix(0.0, 0, -17);
            self.dec.\out\.index := 0;
            self.dec.\out\.valid := True;
          return self;
    end function;

    function init_constants return Spectrogram_1.self_t_const is
        variable self: Spectrogram_1.self_t_const;
    begin
            self.DECIMATE_BY := 4;
            self.NFFT := 512;
            self.pack.PACKET_SIZE := 512;
            self.pack.DELAY := 1;
            self.windower.M := 512;
            self.windower.WINDOW := (Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0703125, 0, -7), Sfix(0.0703125, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.0859375, 0, -7), Sfix(0.0859375, 0, -7), Sfix(0.09375, 0, -7), Sfix(0.09375, 0, -7), Sfix(0.1015625, 0, -7), Sfix(0.1015625, 0, -7), Sfix(0.109375, 0, -7), Sfix(0.109375, 0, -7), Sfix(0.1171875, 0, -7), Sfix(0.1171875, 0, -7), Sfix(0.125, 0, -7), Sfix(0.125, 0, -7), Sfix(0.1328125, 0, -7), Sfix(0.1328125, 0, -7), Sfix(0.140625, 0, -7), Sfix(0.140625, 0, -7), Sfix(0.1484375, 0, -7), Sfix(0.1484375, 0, -7), Sfix(0.15625, 0, -7), Sfix(0.1640625, 0, -7), Sfix(0.1640625, 0, -7), Sfix(0.171875, 0, -7), Sfix(0.171875, 0, -7), Sfix(0.1796875, 0, -7), Sfix(0.1796875, 0, -7), Sfix(0.1875, 0, -7), Sfix(0.1953125, 0, -7), Sfix(0.1953125, 0, -7), Sfix(0.203125, 0, -7), Sfix(0.2109375, 0, -7), Sfix(0.2109375, 0, -7), Sfix(0.21875, 0, -7), Sfix(0.2265625, 0, -7), Sfix(0.2265625, 0, -7), Sfix(0.234375, 0, -7), Sfix(0.2421875, 0, -7), Sfix(0.2421875, 0, -7), Sfix(0.25, 0, -7), Sfix(0.2578125, 0, -7), Sfix(0.2578125, 0, -7), Sfix(0.265625, 0, -7), Sfix(0.2734375, 0, -7), Sfix(0.2734375, 0, -7), Sfix(0.28125, 0, -7), Sfix(0.2890625, 0, -7), Sfix(0.2890625, 0, -7), Sfix(0.296875, 0, -7), Sfix(0.3046875, 0, -7), Sfix(0.3125, 0, -7), Sfix(0.3125, 0, -7), Sfix(0.3203125, 0, -7), Sfix(0.328125, 0, -7), Sfix(0.3359375, 0, -7), Sfix(0.3359375, 0, -7), Sfix(0.34375, 0, -7), Sfix(0.3515625, 0, -7), Sfix(0.359375, 0, -7), Sfix(0.359375, 0, -7), Sfix(0.3671875, 0, -7), Sfix(0.375, 0, -7), Sfix(0.3828125, 0, -7), Sfix(0.3828125, 0, -7), Sfix(0.390625, 0, -7), Sfix(0.3984375, 0, -7), Sfix(0.40625, 0, -7), Sfix(0.40625, 0, -7), Sfix(0.4140625, 0, -7), Sfix(0.421875, 0, -7), Sfix(0.4296875, 0, -7), Sfix(0.4375, 0, -7), Sfix(0.4375, 0, -7), Sfix(0.4453125, 0, -7), Sfix(0.453125, 0, -7), Sfix(0.4609375, 0, -7), Sfix(0.4609375, 0, -7), Sfix(0.46875, 0, -7), Sfix(0.4765625, 0, -7), Sfix(0.484375, 0, -7), Sfix(0.4921875, 0, -7), Sfix(0.4921875, 0, -7), Sfix(0.5, 0, -7), Sfix(0.5078125, 0, -7), Sfix(0.515625, 0, -7), Sfix(0.5234375, 0, -7), Sfix(0.5234375, 0, -7), Sfix(0.53125, 0, -7), Sfix(0.5390625, 0, -7), Sfix(0.546875, 0, -7), Sfix(0.546875, 0, -7), Sfix(0.5546875, 0, -7), Sfix(0.5625, 0, -7), Sfix(0.5703125, 0, -7), Sfix(0.578125, 0, -7), Sfix(0.578125, 0, -7), Sfix(0.5859375, 0, -7), Sfix(0.59375, 0, -7), Sfix(0.6015625, 0, -7), Sfix(0.6015625, 0, -7), Sfix(0.609375, 0, -7), Sfix(0.6171875, 0, -7), Sfix(0.625, 0, -7), Sfix(0.6328125, 0, -7), Sfix(0.6328125, 0, -7), Sfix(0.640625, 0, -7), Sfix(0.6484375, 0, -7), Sfix(0.65625, 0, -7), Sfix(0.65625, 0, -7), Sfix(0.6640625, 0, -7), Sfix(0.671875, 0, -7), Sfix(0.6796875, 0, -7), Sfix(0.6796875, 0, -7), Sfix(0.6875, 0, -7), Sfix(0.6953125, 0, -7), Sfix(0.6953125, 0, -7), Sfix(0.703125, 0, -7), Sfix(0.7109375, 0, -7), Sfix(0.71875, 0, -7), Sfix(0.71875, 0, -7), Sfix(0.7265625, 0, -7), Sfix(0.734375, 0, -7), Sfix(0.734375, 0, -7), Sfix(0.7421875, 0, -7), Sfix(0.75, 0, -7), Sfix(0.75, 0, -7), Sfix(0.7578125, 0, -7), Sfix(0.765625, 0, -7), Sfix(0.765625, 0, -7), Sfix(0.7734375, 0, -7), Sfix(0.78125, 0, -7), Sfix(0.78125, 0, -7), Sfix(0.7890625, 0, -7), Sfix(0.796875, 0, -7), Sfix(0.796875, 0, -7), Sfix(0.8046875, 0, -7), Sfix(0.8125, 0, -7), Sfix(0.8125, 0, -7), Sfix(0.8203125, 0, -7), Sfix(0.8203125, 0, -7), Sfix(0.828125, 0, -7), Sfix(0.8359375, 0, -7), Sfix(0.8359375, 0, -7), Sfix(0.84375, 0, -7), Sfix(0.84375, 0, -7), Sfix(0.8515625, 0, -7), Sfix(0.8515625, 0, -7), Sfix(0.859375, 0, -7), Sfix(0.8671875, 0, -7), Sfix(0.8671875, 0, -7), Sfix(0.875, 0, -7), Sfix(0.875, 0, -7), Sfix(0.8828125, 0, -7), Sfix(0.8828125, 0, -7), Sfix(0.890625, 0, -7), Sfix(0.890625, 0, -7), Sfix(0.8984375, 0, -7), Sfix(0.8984375, 0, -7), Sfix(0.90625, 0, -7), Sfix(0.90625, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.921875, 0, -7), Sfix(0.921875, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.9375, 0, -7), Sfix(0.9375, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.9921875, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.984375, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.9765625, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.96875, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.9609375, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.953125, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.9453125, 0, -7), Sfix(0.9375, 0, -7), Sfix(0.9375, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.9296875, 0, -7), Sfix(0.921875, 0, -7), Sfix(0.921875, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.9140625, 0, -7), Sfix(0.90625, 0, -7), Sfix(0.90625, 0, -7), Sfix(0.8984375, 0, -7), Sfix(0.8984375, 0, -7), Sfix(0.890625, 0, -7), Sfix(0.890625, 0, -7), Sfix(0.8828125, 0, -7), Sfix(0.8828125, 0, -7), Sfix(0.875, 0, -7), Sfix(0.875, 0, -7), Sfix(0.8671875, 0, -7), Sfix(0.8671875, 0, -7), Sfix(0.859375, 0, -7), Sfix(0.8515625, 0, -7), Sfix(0.8515625, 0, -7), Sfix(0.84375, 0, -7), Sfix(0.84375, 0, -7), Sfix(0.8359375, 0, -7), Sfix(0.8359375, 0, -7), Sfix(0.828125, 0, -7), Sfix(0.8203125, 0, -7), Sfix(0.8203125, 0, -7), Sfix(0.8125, 0, -7), Sfix(0.8125, 0, -7), Sfix(0.8046875, 0, -7), Sfix(0.796875, 0, -7), Sfix(0.796875, 0, -7), Sfix(0.7890625, 0, -7), Sfix(0.78125, 0, -7), Sfix(0.78125, 0, -7), Sfix(0.7734375, 0, -7), Sfix(0.765625, 0, -7), Sfix(0.765625, 0, -7), Sfix(0.7578125, 0, -7), Sfix(0.75, 0, -7), Sfix(0.75, 0, -7), Sfix(0.7421875, 0, -7), Sfix(0.734375, 0, -7), Sfix(0.734375, 0, -7), Sfix(0.7265625, 0, -7), Sfix(0.71875, 0, -7), Sfix(0.71875, 0, -7), Sfix(0.7109375, 0, -7), Sfix(0.703125, 0, -7), Sfix(0.6953125, 0, -7), Sfix(0.6953125, 0, -7), Sfix(0.6875, 0, -7), Sfix(0.6796875, 0, -7), Sfix(0.6796875, 0, -7), Sfix(0.671875, 0, -7), Sfix(0.6640625, 0, -7), Sfix(0.65625, 0, -7), Sfix(0.65625, 0, -7), Sfix(0.6484375, 0, -7), Sfix(0.640625, 0, -7), Sfix(0.6328125, 0, -7), Sfix(0.6328125, 0, -7), Sfix(0.625, 0, -7), Sfix(0.6171875, 0, -7), Sfix(0.609375, 0, -7), Sfix(0.6015625, 0, -7), Sfix(0.6015625, 0, -7), Sfix(0.59375, 0, -7), Sfix(0.5859375, 0, -7), Sfix(0.578125, 0, -7), Sfix(0.578125, 0, -7), Sfix(0.5703125, 0, -7), Sfix(0.5625, 0, -7), Sfix(0.5546875, 0, -7), Sfix(0.546875, 0, -7), Sfix(0.546875, 0, -7), Sfix(0.5390625, 0, -7), Sfix(0.53125, 0, -7), Sfix(0.5234375, 0, -7), Sfix(0.5234375, 0, -7), Sfix(0.515625, 0, -7), Sfix(0.5078125, 0, -7), Sfix(0.5, 0, -7), Sfix(0.4921875, 0, -7), Sfix(0.4921875, 0, -7), Sfix(0.484375, 0, -7), Sfix(0.4765625, 0, -7), Sfix(0.46875, 0, -7), Sfix(0.4609375, 0, -7), Sfix(0.4609375, 0, -7), Sfix(0.453125, 0, -7), Sfix(0.4453125, 0, -7), Sfix(0.4375, 0, -7), Sfix(0.4375, 0, -7), Sfix(0.4296875, 0, -7), Sfix(0.421875, 0, -7), Sfix(0.4140625, 0, -7), Sfix(0.40625, 0, -7), Sfix(0.40625, 0, -7), Sfix(0.3984375, 0, -7), Sfix(0.390625, 0, -7), Sfix(0.3828125, 0, -7), Sfix(0.3828125, 0, -7), Sfix(0.375, 0, -7), Sfix(0.3671875, 0, -7), Sfix(0.359375, 0, -7), Sfix(0.359375, 0, -7), Sfix(0.3515625, 0, -7), Sfix(0.34375, 0, -7), Sfix(0.3359375, 0, -7), Sfix(0.3359375, 0, -7), Sfix(0.328125, 0, -7), Sfix(0.3203125, 0, -7), Sfix(0.3125, 0, -7), Sfix(0.3125, 0, -7), Sfix(0.3046875, 0, -7), Sfix(0.296875, 0, -7), Sfix(0.2890625, 0, -7), Sfix(0.2890625, 0, -7), Sfix(0.28125, 0, -7), Sfix(0.2734375, 0, -7), Sfix(0.2734375, 0, -7), Sfix(0.265625, 0, -7), Sfix(0.2578125, 0, -7), Sfix(0.2578125, 0, -7), Sfix(0.25, 0, -7), Sfix(0.2421875, 0, -7), Sfix(0.2421875, 0, -7), Sfix(0.234375, 0, -7), Sfix(0.2265625, 0, -7), Sfix(0.2265625, 0, -7), Sfix(0.21875, 0, -7), Sfix(0.2109375, 0, -7), Sfix(0.2109375, 0, -7), Sfix(0.203125, 0, -7), Sfix(0.1953125, 0, -7), Sfix(0.1953125, 0, -7), Sfix(0.1875, 0, -7), Sfix(0.1796875, 0, -7), Sfix(0.1796875, 0, -7), Sfix(0.171875, 0, -7), Sfix(0.171875, 0, -7), Sfix(0.1640625, 0, -7), Sfix(0.1640625, 0, -7), Sfix(0.15625, 0, -7), Sfix(0.1484375, 0, -7), Sfix(0.1484375, 0, -7), Sfix(0.140625, 0, -7), Sfix(0.140625, 0, -7), Sfix(0.1328125, 0, -7), Sfix(0.1328125, 0, -7), Sfix(0.125, 0, -7), Sfix(0.125, 0, -7), Sfix(0.1171875, 0, -7), Sfix(0.1171875, 0, -7), Sfix(0.109375, 0, -7), Sfix(0.109375, 0, -7), Sfix(0.1015625, 0, -7), Sfix(0.1015625, 0, -7), Sfix(0.09375, 0, -7), Sfix(0.09375, 0, -7), Sfix(0.0859375, 0, -7), Sfix(0.0859375, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.078125, 0, -7), Sfix(0.0703125, 0, -7), Sfix(0.0703125, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0625, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.0546875, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.046875, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.0390625, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.03125, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.0234375, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.015625, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0078125, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7), Sfix(0.0, 0, -7));
            self.windower.DELAY := 1;
            self.fft.FFT_SIZE := 512;
            self.fft.N_STAGES := 9;
            self.fft.stages_0.FFT_SIZE := 512;
            self.fft.stages_0.FFT_HALF := 256;
            self.fft.stages_0.CONTROL_MASK := 255;
            self.fft.stages_0.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9999237060546875, -0.01226806640625, 0, -17), Complex(0.9997024536132812, -0.02454376220703125, 0, -17), Complex(0.9993209838867188, -0.03680419921875, 0, -17), Complex(0.9987945556640625, -0.04906463623046875, 0, -17), Complex(0.9981155395507812, -0.06131744384765625, 0, -17), Complex(0.9972915649414062, -0.0735626220703125, 0, -17), Complex(0.9963150024414062, -0.0858001708984375, 0, -17), Complex(0.9951858520507812, -0.09801483154296875, 0, -17), Complex(0.9939041137695312, -0.11022186279296875, 0, -17), Complex(0.9924774169921875, -0.12241363525390625, 0, -17), Complex(0.99090576171875, -0.13458251953125, 0, -17), Complex(0.9891738891601562, -0.146728515625, 0, -17), Complex(0.9873046875, -0.1588592529296875, 0, -17), Complex(0.9852752685546875, -0.17095947265625, 0, -17), Complex(0.9831085205078125, -0.18303680419921875, 0, -17), Complex(0.9807815551757812, -0.19509124755859375, 0, -17), Complex(0.9783172607421875, -0.20711517333984375, 0, -17), Complex(0.9757003784179688, -0.2191009521484375, 0, -17), Complex(0.9729385375976562, -0.23105621337890625, 0, -17), Complex(0.97003173828125, -0.24298095703125, 0, -17), Complex(0.96697998046875, -0.2548675537109375, 0, -17), Complex(0.963775634765625, -0.26671600341796875, 0, -17), Complex(0.9604339599609375, -0.2785186767578125, 0, -17), Complex(0.956939697265625, -0.290283203125, 0, -17), Complex(0.95330810546875, -0.30200958251953125, 0, -17), Complex(0.9495315551757812, -0.31368255615234375, 0, -17), Complex(0.9456100463867188, -0.32530975341796875, 0, -17), Complex(0.9415435791015625, -0.33689117431640625, 0, -17), Complex(0.9373397827148438, -0.348419189453125, 0, -17), Complex(0.9329910278320312, -0.359893798828125, 0, -17), Complex(0.9285049438476562, -0.37131500244140625, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.9191131591796875, -0.39398956298828125, 0, -17), Complex(0.9142074584960938, -0.405242919921875, 0, -17), Complex(0.9091644287109375, -0.4164276123046875, 0, -17), Complex(0.90399169921875, -0.42755889892578125, 0, -17), Complex(0.8986740112304688, -0.4386138916015625, 0, -17), Complex(0.8932266235351562, -0.44960784912109375, 0, -17), Complex(0.8876419067382812, -0.460540771484375, 0, -17), Complex(0.8819198608398438, -0.47139739990234375, 0, -17), Complex(0.876068115234375, -0.48218536376953125, 0, -17), Complex(0.870086669921875, -0.49289703369140625, 0, -17), Complex(0.8639755249023438, -0.5035400390625, 0, -17), Complex(0.85772705078125, -0.51409912109375, 0, -17), Complex(0.8513565063476562, -0.5245895385742188, 0, -17), Complex(0.8448562622070312, -0.5349960327148438, 0, -17), Complex(0.838226318359375, -0.5453262329101562, 0, -17), Complex(0.8314666748046875, -0.555572509765625, 0, -17), Complex(0.8245925903320312, -0.56573486328125, 0, -17), Complex(0.8175811767578125, -0.5758056640625, 0, -17), Complex(0.810455322265625, -0.5858001708984375, 0, -17), Complex(0.8032073974609375, -0.5956954956054688, 0, -17), Complex(0.79583740234375, -0.6055145263671875, 0, -17), Complex(0.7883453369140625, -0.615234375, 0, -17), Complex(0.7807388305664062, -0.6248626708984375, 0, -17), Complex(0.77301025390625, -0.6343917846679688, 0, -17), Complex(0.765167236328125, -0.643829345703125, 0, -17), Complex(0.7572097778320312, -0.6531753540039062, 0, -17), Complex(0.7491378784179688, -0.66241455078125, 0, -17), Complex(0.7409515380859375, -0.6715621948242188, 0, -17), Complex(0.7326507568359375, -0.68060302734375, 0, -17), Complex(0.7242507934570312, -0.6895370483398438, 0, -17), Complex(0.715728759765625, -0.6983795166015625, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.6983795166015625, -0.715728759765625, 0, -17), Complex(0.6895370483398438, -0.7242507934570312, 0, -17), Complex(0.68060302734375, -0.7326507568359375, 0, -17), Complex(0.6715621948242188, -0.7409515380859375, 0, -17), Complex(0.66241455078125, -0.7491378784179688, 0, -17), Complex(0.6531753540039062, -0.7572097778320312, 0, -17), Complex(0.643829345703125, -0.765167236328125, 0, -17), Complex(0.6343917846679688, -0.77301025390625, 0, -17), Complex(0.6248626708984375, -0.7807388305664062, 0, -17), Complex(0.615234375, -0.7883453369140625, 0, -17), Complex(0.6055145263671875, -0.79583740234375, 0, -17), Complex(0.5956954956054688, -0.8032073974609375, 0, -17), Complex(0.5858001708984375, -0.810455322265625, 0, -17), Complex(0.5758056640625, -0.8175811767578125, 0, -17), Complex(0.56573486328125, -0.8245925903320312, 0, -17), Complex(0.555572509765625, -0.8314666748046875, 0, -17), Complex(0.5453262329101562, -0.838226318359375, 0, -17), Complex(0.5349960327148438, -0.8448562622070312, 0, -17), Complex(0.5245895385742188, -0.8513565063476562, 0, -17), Complex(0.51409912109375, -0.85772705078125, 0, -17), Complex(0.5035400390625, -0.8639755249023438, 0, -17), Complex(0.49289703369140625, -0.870086669921875, 0, -17), Complex(0.48218536376953125, -0.876068115234375, 0, -17), Complex(0.47139739990234375, -0.8819198608398438, 0, -17), Complex(0.460540771484375, -0.8876419067382812, 0, -17), Complex(0.44960784912109375, -0.8932266235351562, 0, -17), Complex(0.4386138916015625, -0.8986740112304688, 0, -17), Complex(0.42755889892578125, -0.90399169921875, 0, -17), Complex(0.4164276123046875, -0.9091644287109375, 0, -17), Complex(0.405242919921875, -0.9142074584960938, 0, -17), Complex(0.39398956298828125, -0.9191131591796875, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.37131500244140625, -0.9285049438476562, 0, -17), Complex(0.359893798828125, -0.9329910278320312, 0, -17), Complex(0.348419189453125, -0.9373397827148438, 0, -17), Complex(0.33689117431640625, -0.9415435791015625, 0, -17), Complex(0.32530975341796875, -0.9456100463867188, 0, -17), Complex(0.31368255615234375, -0.9495315551757812, 0, -17), Complex(0.30200958251953125, -0.95330810546875, 0, -17), Complex(0.290283203125, -0.956939697265625, 0, -17), Complex(0.2785186767578125, -0.9604339599609375, 0, -17), Complex(0.26671600341796875, -0.963775634765625, 0, -17), Complex(0.2548675537109375, -0.96697998046875, 0, -17), Complex(0.24298095703125, -0.97003173828125, 0, -17), Complex(0.23105621337890625, -0.9729385375976562, 0, -17), Complex(0.2191009521484375, -0.9757003784179688, 0, -17), Complex(0.20711517333984375, -0.9783172607421875, 0, -17), Complex(0.19509124755859375, -0.9807815551757812, 0, -17), Complex(0.18303680419921875, -0.9831085205078125, 0, -17), Complex(0.17095947265625, -0.9852752685546875, 0, -17), Complex(0.1588592529296875, -0.9873046875, 0, -17), Complex(0.146728515625, -0.9891738891601562, 0, -17), Complex(0.13458251953125, -0.99090576171875, 0, -17), Complex(0.12241363525390625, -0.9924774169921875, 0, -17), Complex(0.11022186279296875, -0.9939041137695312, 0, -17), Complex(0.09801483154296875, -0.9951858520507812, 0, -17), Complex(0.0858001708984375, -0.9963150024414062, 0, -17), Complex(0.0735626220703125, -0.9972915649414062, 0, -17), Complex(0.06131744384765625, -0.9981155395507812, 0, -17), Complex(0.04906463623046875, -0.9987945556640625, 0, -17), Complex(0.03680419921875, -0.9993209838867188, 0, -17), Complex(0.02454376220703125, -0.9997024536132812, 0, -17), Complex(0.01226806640625, -0.9999237060546875, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.01226806640625, -0.9999237060546875, 0, -17), Complex(-0.02454376220703125, -0.9997024536132812, 0, -17), Complex(-0.03680419921875, -0.9993209838867188, 0, -17), Complex(-0.04906463623046875, -0.9987945556640625, 0, -17), Complex(-0.06131744384765625, -0.9981155395507812, 0, -17), Complex(-0.0735626220703125, -0.9972915649414062, 0, -17), Complex(-0.0858001708984375, -0.9963150024414062, 0, -17), Complex(-0.09801483154296875, -0.9951858520507812, 0, -17), Complex(-0.11022186279296875, -0.9939041137695312, 0, -17), Complex(-0.12241363525390625, -0.9924774169921875, 0, -17), Complex(-0.13458251953125, -0.99090576171875, 0, -17), Complex(-0.146728515625, -0.9891738891601562, 0, -17), Complex(-0.1588592529296875, -0.9873046875, 0, -17), Complex(-0.17095947265625, -0.9852752685546875, 0, -17), Complex(-0.18303680419921875, -0.9831085205078125, 0, -17), Complex(-0.19509124755859375, -0.9807815551757812, 0, -17), Complex(-0.20711517333984375, -0.9783172607421875, 0, -17), Complex(-0.2191009521484375, -0.9757003784179688, 0, -17), Complex(-0.23105621337890625, -0.9729385375976562, 0, -17), Complex(-0.24298095703125, -0.97003173828125, 0, -17), Complex(-0.2548675537109375, -0.96697998046875, 0, -17), Complex(-0.26671600341796875, -0.963775634765625, 0, -17), Complex(-0.2785186767578125, -0.9604339599609375, 0, -17), Complex(-0.290283203125, -0.956939697265625, 0, -17), Complex(-0.30200958251953125, -0.95330810546875, 0, -17), Complex(-0.31368255615234375, -0.9495315551757812, 0, -17), Complex(-0.32530975341796875, -0.9456100463867188, 0, -17), Complex(-0.33689117431640625, -0.9415435791015625, 0, -17), Complex(-0.348419189453125, -0.9373397827148438, 0, -17), Complex(-0.359893798828125, -0.9329910278320312, 0, -17), Complex(-0.37131500244140625, -0.9285049438476562, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.39398956298828125, -0.9191131591796875, 0, -17), Complex(-0.405242919921875, -0.9142074584960938, 0, -17), Complex(-0.4164276123046875, -0.9091644287109375, 0, -17), Complex(-0.42755889892578125, -0.90399169921875, 0, -17), Complex(-0.4386138916015625, -0.8986740112304688, 0, -17), Complex(-0.44960784912109375, -0.8932266235351562, 0, -17), Complex(-0.460540771484375, -0.8876419067382812, 0, -17), Complex(-0.47139739990234375, -0.8819198608398438, 0, -17), Complex(-0.48218536376953125, -0.876068115234375, 0, -17), Complex(-0.49289703369140625, -0.870086669921875, 0, -17), Complex(-0.5035400390625, -0.8639755249023438, 0, -17), Complex(-0.51409912109375, -0.85772705078125, 0, -17), Complex(-0.5245895385742188, -0.8513565063476562, 0, -17), Complex(-0.5349960327148438, -0.8448562622070312, 0, -17), Complex(-0.5453262329101562, -0.838226318359375, 0, -17), Complex(-0.555572509765625, -0.8314666748046875, 0, -17), Complex(-0.56573486328125, -0.8245925903320312, 0, -17), Complex(-0.5758056640625, -0.8175811767578125, 0, -17), Complex(-0.5858001708984375, -0.810455322265625, 0, -17), Complex(-0.5956954956054688, -0.8032073974609375, 0, -17), Complex(-0.6055145263671875, -0.79583740234375, 0, -17), Complex(-0.615234375, -0.7883453369140625, 0, -17), Complex(-0.6248626708984375, -0.7807388305664062, 0, -17), Complex(-0.6343917846679688, -0.77301025390625, 0, -17), Complex(-0.643829345703125, -0.765167236328125, 0, -17), Complex(-0.6531753540039062, -0.7572097778320312, 0, -17), Complex(-0.66241455078125, -0.7491378784179688, 0, -17), Complex(-0.6715621948242188, -0.7409515380859375, 0, -17), Complex(-0.68060302734375, -0.7326507568359375, 0, -17), Complex(-0.6895370483398438, -0.7242507934570312, 0, -17), Complex(-0.6983795166015625, -0.715728759765625, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.715728759765625, -0.6983795166015625, 0, -17), Complex(-0.7242507934570312, -0.6895370483398438, 0, -17), Complex(-0.7326507568359375, -0.68060302734375, 0, -17), Complex(-0.7409515380859375, -0.6715621948242188, 0, -17), Complex(-0.7491378784179688, -0.66241455078125, 0, -17), Complex(-0.7572097778320312, -0.6531753540039062, 0, -17), Complex(-0.765167236328125, -0.643829345703125, 0, -17), Complex(-0.77301025390625, -0.6343917846679688, 0, -17), Complex(-0.7807388305664062, -0.6248626708984375, 0, -17), Complex(-0.7883453369140625, -0.615234375, 0, -17), Complex(-0.79583740234375, -0.6055145263671875, 0, -17), Complex(-0.8032073974609375, -0.5956954956054688, 0, -17), Complex(-0.810455322265625, -0.5858001708984375, 0, -17), Complex(-0.8175811767578125, -0.5758056640625, 0, -17), Complex(-0.8245925903320312, -0.56573486328125, 0, -17), Complex(-0.8314666748046875, -0.555572509765625, 0, -17), Complex(-0.838226318359375, -0.5453262329101562, 0, -17), Complex(-0.8448562622070312, -0.5349960327148438, 0, -17), Complex(-0.8513565063476562, -0.5245895385742188, 0, -17), Complex(-0.85772705078125, -0.51409912109375, 0, -17), Complex(-0.8639755249023438, -0.5035400390625, 0, -17), Complex(-0.870086669921875, -0.49289703369140625, 0, -17), Complex(-0.876068115234375, -0.48218536376953125, 0, -17), Complex(-0.8819198608398438, -0.47139739990234375, 0, -17), Complex(-0.8876419067382812, -0.460540771484375, 0, -17), Complex(-0.8932266235351562, -0.44960784912109375, 0, -17), Complex(-0.8986740112304688, -0.4386138916015625, 0, -17), Complex(-0.90399169921875, -0.42755889892578125, 0, -17), Complex(-0.9091644287109375, -0.4164276123046875, 0, -17), Complex(-0.9142074584960938, -0.405242919921875, 0, -17), Complex(-0.9191131591796875, -0.39398956298828125, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17), Complex(-0.9285049438476562, -0.37131500244140625, 0, -17), Complex(-0.9329910278320312, -0.359893798828125, 0, -17), Complex(-0.9373397827148438, -0.348419189453125, 0, -17), Complex(-0.9415435791015625, -0.33689117431640625, 0, -17), Complex(-0.9456100463867188, -0.32530975341796875, 0, -17), Complex(-0.9495315551757812, -0.31368255615234375, 0, -17), Complex(-0.95330810546875, -0.30200958251953125, 0, -17), Complex(-0.956939697265625, -0.290283203125, 0, -17), Complex(-0.9604339599609375, -0.2785186767578125, 0, -17), Complex(-0.963775634765625, -0.26671600341796875, 0, -17), Complex(-0.96697998046875, -0.2548675537109375, 0, -17), Complex(-0.97003173828125, -0.24298095703125, 0, -17), Complex(-0.9729385375976562, -0.23105621337890625, 0, -17), Complex(-0.9757003784179688, -0.2191009521484375, 0, -17), Complex(-0.9783172607421875, -0.20711517333984375, 0, -17), Complex(-0.9807815551757812, -0.19509124755859375, 0, -17), Complex(-0.9831085205078125, -0.18303680419921875, 0, -17), Complex(-0.9852752685546875, -0.17095947265625, 0, -17), Complex(-0.9873046875, -0.1588592529296875, 0, -17), Complex(-0.9891738891601562, -0.146728515625, 0, -17), Complex(-0.99090576171875, -0.13458251953125, 0, -17), Complex(-0.9924774169921875, -0.12241363525390625, 0, -17), Complex(-0.9939041137695312, -0.11022186279296875, 0, -17), Complex(-0.9951858520507812, -0.09801483154296875, 0, -17), Complex(-0.9963150024414062, -0.0858001708984375, 0, -17), Complex(-0.9972915649414062, -0.0735626220703125, 0, -17), Complex(-0.9981155395507812, -0.06131744384765625, 0, -17), Complex(-0.9987945556640625, -0.04906463623046875, 0, -17), Complex(-0.9993209838867188, -0.03680419921875, 0, -17), Complex(-0.9997024536132812, -0.02454376220703125, 0, -17), Complex(-0.9999237060546875, -0.01226806640625, 0, -17));
            self.fft.stages_1.FFT_SIZE := 256;
            self.fft.stages_1.FFT_HALF := 128;
            self.fft.stages_1.CONTROL_MASK := 127;
            self.fft.stages_1.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9997024536132812, -0.02454376220703125, 0, -17), Complex(0.9987945556640625, -0.04906463623046875, 0, -17), Complex(0.9972915649414062, -0.0735626220703125, 0, -17), Complex(0.9951858520507812, -0.09801483154296875, 0, -17), Complex(0.9924774169921875, -0.12241363525390625, 0, -17), Complex(0.9891738891601562, -0.146728515625, 0, -17), Complex(0.9852752685546875, -0.17095947265625, 0, -17), Complex(0.9807815551757812, -0.19509124755859375, 0, -17), Complex(0.9757003784179688, -0.2191009521484375, 0, -17), Complex(0.97003173828125, -0.24298095703125, 0, -17), Complex(0.963775634765625, -0.26671600341796875, 0, -17), Complex(0.956939697265625, -0.290283203125, 0, -17), Complex(0.9495315551757812, -0.31368255615234375, 0, -17), Complex(0.9415435791015625, -0.33689117431640625, 0, -17), Complex(0.9329910278320312, -0.359893798828125, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.9142074584960938, -0.405242919921875, 0, -17), Complex(0.90399169921875, -0.42755889892578125, 0, -17), Complex(0.8932266235351562, -0.44960784912109375, 0, -17), Complex(0.8819198608398438, -0.47139739990234375, 0, -17), Complex(0.870086669921875, -0.49289703369140625, 0, -17), Complex(0.85772705078125, -0.51409912109375, 0, -17), Complex(0.8448562622070312, -0.5349960327148438, 0, -17), Complex(0.8314666748046875, -0.555572509765625, 0, -17), Complex(0.8175811767578125, -0.5758056640625, 0, -17), Complex(0.8032073974609375, -0.5956954956054688, 0, -17), Complex(0.7883453369140625, -0.615234375, 0, -17), Complex(0.77301025390625, -0.6343917846679688, 0, -17), Complex(0.7572097778320312, -0.6531753540039062, 0, -17), Complex(0.7409515380859375, -0.6715621948242188, 0, -17), Complex(0.7242507934570312, -0.6895370483398438, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.6895370483398438, -0.7242507934570312, 0, -17), Complex(0.6715621948242188, -0.7409515380859375, 0, -17), Complex(0.6531753540039062, -0.7572097778320312, 0, -17), Complex(0.6343917846679688, -0.77301025390625, 0, -17), Complex(0.615234375, -0.7883453369140625, 0, -17), Complex(0.5956954956054688, -0.8032073974609375, 0, -17), Complex(0.5758056640625, -0.8175811767578125, 0, -17), Complex(0.555572509765625, -0.8314666748046875, 0, -17), Complex(0.5349960327148438, -0.8448562622070312, 0, -17), Complex(0.51409912109375, -0.85772705078125, 0, -17), Complex(0.49289703369140625, -0.870086669921875, 0, -17), Complex(0.47139739990234375, -0.8819198608398438, 0, -17), Complex(0.44960784912109375, -0.8932266235351562, 0, -17), Complex(0.42755889892578125, -0.90399169921875, 0, -17), Complex(0.405242919921875, -0.9142074584960938, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.359893798828125, -0.9329910278320312, 0, -17), Complex(0.33689117431640625, -0.9415435791015625, 0, -17), Complex(0.31368255615234375, -0.9495315551757812, 0, -17), Complex(0.290283203125, -0.956939697265625, 0, -17), Complex(0.26671600341796875, -0.963775634765625, 0, -17), Complex(0.24298095703125, -0.97003173828125, 0, -17), Complex(0.2191009521484375, -0.9757003784179688, 0, -17), Complex(0.19509124755859375, -0.9807815551757812, 0, -17), Complex(0.17095947265625, -0.9852752685546875, 0, -17), Complex(0.146728515625, -0.9891738891601562, 0, -17), Complex(0.12241363525390625, -0.9924774169921875, 0, -17), Complex(0.09801483154296875, -0.9951858520507812, 0, -17), Complex(0.0735626220703125, -0.9972915649414062, 0, -17), Complex(0.04906463623046875, -0.9987945556640625, 0, -17), Complex(0.02454376220703125, -0.9997024536132812, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.02454376220703125, -0.9997024536132812, 0, -17), Complex(-0.04906463623046875, -0.9987945556640625, 0, -17), Complex(-0.0735626220703125, -0.9972915649414062, 0, -17), Complex(-0.09801483154296875, -0.9951858520507812, 0, -17), Complex(-0.12241363525390625, -0.9924774169921875, 0, -17), Complex(-0.146728515625, -0.9891738891601562, 0, -17), Complex(-0.17095947265625, -0.9852752685546875, 0, -17), Complex(-0.19509124755859375, -0.9807815551757812, 0, -17), Complex(-0.2191009521484375, -0.9757003784179688, 0, -17), Complex(-0.24298095703125, -0.97003173828125, 0, -17), Complex(-0.26671600341796875, -0.963775634765625, 0, -17), Complex(-0.290283203125, -0.956939697265625, 0, -17), Complex(-0.31368255615234375, -0.9495315551757812, 0, -17), Complex(-0.33689117431640625, -0.9415435791015625, 0, -17), Complex(-0.359893798828125, -0.9329910278320312, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.405242919921875, -0.9142074584960938, 0, -17), Complex(-0.42755889892578125, -0.90399169921875, 0, -17), Complex(-0.44960784912109375, -0.8932266235351562, 0, -17), Complex(-0.47139739990234375, -0.8819198608398438, 0, -17), Complex(-0.49289703369140625, -0.870086669921875, 0, -17), Complex(-0.51409912109375, -0.85772705078125, 0, -17), Complex(-0.5349960327148438, -0.8448562622070312, 0, -17), Complex(-0.555572509765625, -0.8314666748046875, 0, -17), Complex(-0.5758056640625, -0.8175811767578125, 0, -17), Complex(-0.5956954956054688, -0.8032073974609375, 0, -17), Complex(-0.615234375, -0.7883453369140625, 0, -17), Complex(-0.6343917846679688, -0.77301025390625, 0, -17), Complex(-0.6531753540039062, -0.7572097778320312, 0, -17), Complex(-0.6715621948242188, -0.7409515380859375, 0, -17), Complex(-0.6895370483398438, -0.7242507934570312, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.7242507934570312, -0.6895370483398438, 0, -17), Complex(-0.7409515380859375, -0.6715621948242188, 0, -17), Complex(-0.7572097778320312, -0.6531753540039062, 0, -17), Complex(-0.77301025390625, -0.6343917846679688, 0, -17), Complex(-0.7883453369140625, -0.615234375, 0, -17), Complex(-0.8032073974609375, -0.5956954956054688, 0, -17), Complex(-0.8175811767578125, -0.5758056640625, 0, -17), Complex(-0.8314666748046875, -0.555572509765625, 0, -17), Complex(-0.8448562622070312, -0.5349960327148438, 0, -17), Complex(-0.85772705078125, -0.51409912109375, 0, -17), Complex(-0.870086669921875, -0.49289703369140625, 0, -17), Complex(-0.8819198608398438, -0.47139739990234375, 0, -17), Complex(-0.8932266235351562, -0.44960784912109375, 0, -17), Complex(-0.90399169921875, -0.42755889892578125, 0, -17), Complex(-0.9142074584960938, -0.405242919921875, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17), Complex(-0.9329910278320312, -0.359893798828125, 0, -17), Complex(-0.9415435791015625, -0.33689117431640625, 0, -17), Complex(-0.9495315551757812, -0.31368255615234375, 0, -17), Complex(-0.956939697265625, -0.290283203125, 0, -17), Complex(-0.963775634765625, -0.26671600341796875, 0, -17), Complex(-0.97003173828125, -0.24298095703125, 0, -17), Complex(-0.9757003784179688, -0.2191009521484375, 0, -17), Complex(-0.9807815551757812, -0.19509124755859375, 0, -17), Complex(-0.9852752685546875, -0.17095947265625, 0, -17), Complex(-0.9891738891601562, -0.146728515625, 0, -17), Complex(-0.9924774169921875, -0.12241363525390625, 0, -17), Complex(-0.9951858520507812, -0.09801483154296875, 0, -17), Complex(-0.9972915649414062, -0.0735626220703125, 0, -17), Complex(-0.9987945556640625, -0.04906463623046875, 0, -17), Complex(-0.9997024536132812, -0.02454376220703125, 0, -17));
            self.fft.stages_2.FFT_SIZE := 128;
            self.fft.stages_2.FFT_HALF := 64;
            self.fft.stages_2.CONTROL_MASK := 63;
            self.fft.stages_2.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9987945556640625, -0.04906463623046875, 0, -17), Complex(0.9951858520507812, -0.09801483154296875, 0, -17), Complex(0.9891738891601562, -0.146728515625, 0, -17), Complex(0.9807815551757812, -0.19509124755859375, 0, -17), Complex(0.97003173828125, -0.24298095703125, 0, -17), Complex(0.956939697265625, -0.290283203125, 0, -17), Complex(0.9415435791015625, -0.33689117431640625, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.90399169921875, -0.42755889892578125, 0, -17), Complex(0.8819198608398438, -0.47139739990234375, 0, -17), Complex(0.85772705078125, -0.51409912109375, 0, -17), Complex(0.8314666748046875, -0.555572509765625, 0, -17), Complex(0.8032073974609375, -0.5956954956054688, 0, -17), Complex(0.77301025390625, -0.6343917846679688, 0, -17), Complex(0.7409515380859375, -0.6715621948242188, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.6715621948242188, -0.7409515380859375, 0, -17), Complex(0.6343917846679688, -0.77301025390625, 0, -17), Complex(0.5956954956054688, -0.8032073974609375, 0, -17), Complex(0.555572509765625, -0.8314666748046875, 0, -17), Complex(0.51409912109375, -0.85772705078125, 0, -17), Complex(0.47139739990234375, -0.8819198608398438, 0, -17), Complex(0.42755889892578125, -0.90399169921875, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.33689117431640625, -0.9415435791015625, 0, -17), Complex(0.290283203125, -0.956939697265625, 0, -17), Complex(0.24298095703125, -0.97003173828125, 0, -17), Complex(0.19509124755859375, -0.9807815551757812, 0, -17), Complex(0.146728515625, -0.9891738891601562, 0, -17), Complex(0.09801483154296875, -0.9951858520507812, 0, -17), Complex(0.04906463623046875, -0.9987945556640625, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.04906463623046875, -0.9987945556640625, 0, -17), Complex(-0.09801483154296875, -0.9951858520507812, 0, -17), Complex(-0.146728515625, -0.9891738891601562, 0, -17), Complex(-0.19509124755859375, -0.9807815551757812, 0, -17), Complex(-0.24298095703125, -0.97003173828125, 0, -17), Complex(-0.290283203125, -0.956939697265625, 0, -17), Complex(-0.33689117431640625, -0.9415435791015625, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.42755889892578125, -0.90399169921875, 0, -17), Complex(-0.47139739990234375, -0.8819198608398438, 0, -17), Complex(-0.51409912109375, -0.85772705078125, 0, -17), Complex(-0.555572509765625, -0.8314666748046875, 0, -17), Complex(-0.5956954956054688, -0.8032073974609375, 0, -17), Complex(-0.6343917846679688, -0.77301025390625, 0, -17), Complex(-0.6715621948242188, -0.7409515380859375, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.7409515380859375, -0.6715621948242188, 0, -17), Complex(-0.77301025390625, -0.6343917846679688, 0, -17), Complex(-0.8032073974609375, -0.5956954956054688, 0, -17), Complex(-0.8314666748046875, -0.555572509765625, 0, -17), Complex(-0.85772705078125, -0.51409912109375, 0, -17), Complex(-0.8819198608398438, -0.47139739990234375, 0, -17), Complex(-0.90399169921875, -0.42755889892578125, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17), Complex(-0.9415435791015625, -0.33689117431640625, 0, -17), Complex(-0.956939697265625, -0.290283203125, 0, -17), Complex(-0.97003173828125, -0.24298095703125, 0, -17), Complex(-0.9807815551757812, -0.19509124755859375, 0, -17), Complex(-0.9891738891601562, -0.146728515625, 0, -17), Complex(-0.9951858520507812, -0.09801483154296875, 0, -17), Complex(-0.9987945556640625, -0.04906463623046875, 0, -17));
            self.fft.stages_3.FFT_SIZE := 64;
            self.fft.stages_3.FFT_HALF := 32;
            self.fft.stages_3.CONTROL_MASK := 31;
            self.fft.stages_3.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9951858520507812, -0.09801483154296875, 0, -17), Complex(0.9807815551757812, -0.19509124755859375, 0, -17), Complex(0.956939697265625, -0.290283203125, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.8819198608398438, -0.47139739990234375, 0, -17), Complex(0.8314666748046875, -0.555572509765625, 0, -17), Complex(0.77301025390625, -0.6343917846679688, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.6343917846679688, -0.77301025390625, 0, -17), Complex(0.555572509765625, -0.8314666748046875, 0, -17), Complex(0.47139739990234375, -0.8819198608398438, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.290283203125, -0.956939697265625, 0, -17), Complex(0.19509124755859375, -0.9807815551757812, 0, -17), Complex(0.09801483154296875, -0.9951858520507812, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.09801483154296875, -0.9951858520507812, 0, -17), Complex(-0.19509124755859375, -0.9807815551757812, 0, -17), Complex(-0.290283203125, -0.956939697265625, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.47139739990234375, -0.8819198608398438, 0, -17), Complex(-0.555572509765625, -0.8314666748046875, 0, -17), Complex(-0.6343917846679688, -0.77301025390625, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.77301025390625, -0.6343917846679688, 0, -17), Complex(-0.8314666748046875, -0.555572509765625, 0, -17), Complex(-0.8819198608398438, -0.47139739990234375, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17), Complex(-0.956939697265625, -0.290283203125, 0, -17), Complex(-0.9807815551757812, -0.19509124755859375, 0, -17), Complex(-0.9951858520507812, -0.09801483154296875, 0, -17));
            self.fft.stages_4.FFT_SIZE := 32;
            self.fft.stages_4.FFT_HALF := 16;
            self.fft.stages_4.CONTROL_MASK := 15;
            self.fft.stages_4.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9807815551757812, -0.19509124755859375, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.8314666748046875, -0.555572509765625, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.555572509765625, -0.8314666748046875, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.19509124755859375, -0.9807815551757812, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.19509124755859375, -0.9807815551757812, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.555572509765625, -0.8314666748046875, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.8314666748046875, -0.555572509765625, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17), Complex(-0.9807815551757812, -0.19509124755859375, 0, -17));
            self.fft.stages_5.FFT_SIZE := 16;
            self.fft.stages_5.FFT_HALF := 8;
            self.fft.stages_5.CONTROL_MASK := 7;
            self.fft.stages_5.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.9238815307617188, -0.38268280029296875, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.38268280029296875, -0.9238815307617188, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.38268280029296875, -0.9238815307617188, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17), Complex(-0.9238815307617188, -0.38268280029296875, 0, -17));
            self.fft.stages_6.FFT_SIZE := 8;
            self.fft.stages_6.FFT_HALF := 4;
            self.fft.stages_6.CONTROL_MASK := 3;
            self.fft.stages_6.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.7071075439453125, -0.7071075439453125, 0, -17), Complex(0.0, -1.0, 0, -17), Complex(-0.7071075439453125, -0.7071075439453125, 0, -17));
            self.fft.stages_7.FFT_SIZE := 4;
            self.fft.stages_7.FFT_HALF := 2;
            self.fft.stages_7.CONTROL_MASK := 1;
            self.fft.stages_7.TWIDDLES := (Complex(0.9999923706054688, 0.0, 0, -17), Complex(0.0, -1.0, 0, -17));
            self.fft.stages_8.FFT_SIZE := 2;
            self.fft.stages_8.FFT_HALF := 1;
            self.fft.stages_8.CONTROL_MASK := 0;
            self.fft.stages_8.TWIDDLES(0) := (Complex(0.9999923706054688, 0.0, 0, -17));
            self.fft.GAIN_CORRECTION := Sfix(0.015625, 0, -17);
            self.fft.DELAY := 521;
            self.\abs\.DELAY := 1;
            self.dec.DECIMATION := 4;
            self.dec.DECIMATION_BITS := 2;
            self.dec.FFT_SIZE := 512;
            self.dec.LUT := (64, 0, 96, 32, 80, 16, 112, 48, 72, 8, 104, 40, 88, 24, 120, 56, 68, 4, 100, 36, 84, 20, 116, 52, 76, 12, 108, 44, 92, 28, 124, 60, 66, 2, 98, 34, 82, 18, 114, 50, 74, 10, 106, 42, 90, 26, 122, 58, 70, 6, 102, 38, 86, 22, 118, 54, 78, 14, 110, 46, 94, 30, 126, 62, 65, 1, 97, 33, 81, 17, 113, 49, 73, 9, 105, 41, 89, 25, 121, 57, 69, 5, 101, 37, 85, 21, 117, 53, 77, 13, 109, 45, 93, 29, 125, 61, 67, 3, 99, 35, 83, 19, 115, 51, 75, 11, 107, 43, 91, 27, 123, 59, 71, 7, 103, 39, 87, 23, 119, 55, 79, 15, 111, 47, 95, 31, 127, 63, 64, 0, 96, 32, 80, 16, 112, 48, 72, 8, 104, 40, 88, 24, 120, 56, 68, 4, 100, 36, 84, 20, 116, 52, 76, 12, 108, 44, 92, 28, 124, 60, 66, 2, 98, 34, 82, 18, 114, 50, 74, 10, 106, 42, 90, 26, 122, 58, 70, 6, 102, 38, 86, 22, 118, 54, 78, 14, 110, 46, 94, 30, 126, 62, 65, 1, 97, 33, 81, 17, 113, 49, 73, 9, 105, 41, 89, 25, 121, 57, 69, 5, 101, 37, 85, 21, 117, 53, 77, 13, 109, 45, 93, 29, 125, 61, 67, 3, 99, 35, 83, 19, 115, 51, 75, 11, 107, 43, 91, 27, 123, 59, 71, 7, 103, 39, 87, 23, 119, 55, 79, 15, 111, 47, 95, 31, 127, 63, 64, 0, 96, 32, 80, 16, 112, 48, 72, 8, 104, 40, 88, 24, 120, 56, 68, 4, 100, 36, 84, 20, 116, 52, 76, 12, 108, 44, 92, 28, 124, 60, 66, 2, 98, 34, 82, 18, 114, 50, 74, 10, 106, 42, 90, 26, 122, 58, 70, 6, 102, 38, 86, 22, 118, 54, 78, 14, 110, 46, 94, 30, 126, 62, 65, 1, 97, 33, 81, 17, 113, 49, 73, 9, 105, 41, 89, 25, 121, 57, 69, 5, 101, 37, 85, 21, 117, 53, 77, 13, 109, 45, 93, 29, 125, 61, 67, 3, 99, 35, 83, 19, 115, 51, 75, 11, 107, 43, 91, 27, 123, 59, 71, 7, 103, 39, 87, 23, 119, 55, 79, 15, 111, 47, 95, 31, 127, 63, 64, 0, 96, 32, 80, 16, 112, 48, 72, 8, 104, 40, 88, 24, 120, 56, 68, 4, 100, 36, 84, 20, 116, 52, 76, 12, 108, 44, 92, 28, 124, 60, 66, 2, 98, 34, 82, 18, 114, 50, 74, 10, 106, 42, 90, 26, 122, 58, 70, 6, 102, 38, 86, 22, 118, 54, 78, 14, 110, 46, 94, 30, 126, 62, 65, 1, 97, 33, 81, 17, 113, 49, 73, 9, 105, 41, 89, 25, 121, 57, 69, 5, 101, 37, 85, 21, 117, 53, 77, 13, 109, 45, 93, 29, 125, 61, 67, 3, 99, 35, 83, 19, 115, 51, 75, 11, 107, 43, 91, 27, 123, 59, 71, 7, 103, 39, 87, 23, 119, 55, 79, 15, 111, 47, 95, 31, 127, 63);
            self.dec.DELAY := 513;
            self.DELAY := 1037;
          return self;
    end function;

    signal self: Spectrogram_1.self_t := init_regs;
    constant self_const: Spectrogram_1.self_t_const := init_constants;
begin
    process(clk, rst_n)
        variable self_next: Spectrogram_1.self_t;
        -- input variables
        variable var_in0: complex_t(1 downto -34);

        --output variables
        variable var_out0: DataWithIndex_3.self_t;

    begin
        self_next := self;

        --convert slv to normal types
        var_in0 := Complex(in0(35 downto 0), 0, -17);

        --call the main entry
        Spectrogram_1.main(self, self_next, self_const, var_in0, ret_0=>var_out0);

        --convert normal types to slv
        out0(17 downto 0) <= to_slv(var_out0.data);
        out0(49 downto 18) <= std_logic_vector(to_signed(var_out0.index, 32));
        out0(50 downto 50) <= bool_to_logic(var_out0.valid);


        if (rst_n = '0') then
            self <= init_regs;
            self.dec.mem0 <= self.dec.mem0;
            self.dec.mem1 <= self.dec.mem1;
        elsif rising_edge(clk) then
            -- look #153 if you want enable
            if enable = '1' then
                self <= self_next;

            end if;
				
				            	self.dec.mem0.data(self_next.dec.mem0.write_address) <= self_next.dec.mem0.write_value;
            	self.dec.mem0.read_reg <= self.dec.mem0.data(self_next.dec.mem0.read_address);

            	self.dec.mem1.data(self_next.dec.mem1.write_address) <= self_next.dec.mem1.write_value;
            	self.dec.mem1.read_reg <= self.dec.mem1.data(self_next.dec.mem1.read_address);
        end if;

    end process;
end architecture;