-- generated by pyha 0.0.7
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.complex_pkg.all;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.DataWithIndex_3.all;
    use work.DataWithIndex_0.all;
    use work.MovingAverage_0.all;
    use work.DCRemoval_0.all;
    use work.Packager_0.all;
    use work.Windower_1.all;
    use work.ShiftRegister_12.all;
    use work.StageR2SDF_12.all;
    use work.ShiftRegister_0.all;
    use work.StageR2SDF_0.all;
    use work.ShiftRegister_1.all;
    use work.StageR2SDF_1.all;
    use work.ShiftRegister_2.all;
    use work.StageR2SDF_2.all;
    use work.ShiftRegister_3.all;
    use work.StageR2SDF_3.all;
    use work.ShiftRegister_4.all;
    use work.StageR2SDF_4.all;
    use work.ShiftRegister_5.all;
    use work.StageR2SDF_5.all;
    use work.ShiftRegister_6.all;
    use work.StageR2SDF_6.all;
    use work.ShiftRegister_7.all;
    use work.StageR2SDF_7.all;
    use work.ShiftRegister_8.all;
    use work.StageR2SDF_8.all;
    use work.ShiftRegister_9.all;
    use work.StageR2SDF_9.all;
    use work.ShiftRegister_10.all;
    use work.StageR2SDF_10.all;
    use work.ShiftRegister_11.all;
    use work.StageR2SDF_11.all;


package R2SDF_1 is
    type self_t is record
        stages: StageR2SDF_0.StageR2SDF_0_self_t_list_t(0 to 12);
        stages_0: StageR2SDF_0.self_t;
        stages_1: StageR2SDF_1.self_t;
        stages_2: StageR2SDF_2.self_t;
        stages_3: StageR2SDF_3.self_t;
        stages_4: StageR2SDF_4.self_t;
        stages_5: StageR2SDF_5.self_t;
        stages_6: StageR2SDF_6.self_t;
        stages_7: StageR2SDF_7.self_t;
        stages_8: StageR2SDF_8.self_t;
        stages_9: StageR2SDF_9.self_t;
        stages_10: StageR2SDF_10.self_t;
        stages_11: StageR2SDF_11.self_t;
        stages_12: StageR2SDF_12.self_t;
        \out\: DataWithIndex_0.self_t;
    end record;
    type R2SDF_1_self_t_list_t is array (natural range <>) of R2SDF_1.self_t;

    type self_t_const is record
        FFT_SIZE: integer;
        N_STAGES: integer;
        stages: StageR2SDF_0.StageR2SDF_0_self_t_const_list_t_const(0 to 12);
        stages_0: StageR2SDF_0.self_t_const;
        stages_1: StageR2SDF_1.self_t_const;
        stages_2: StageR2SDF_2.self_t_const;
        stages_3: StageR2SDF_3.self_t_const;
        stages_4: StageR2SDF_4.self_t_const;
        stages_5: StageR2SDF_5.self_t_const;
        stages_6: StageR2SDF_6.self_t_const;
        stages_7: StageR2SDF_7.self_t_const;
        stages_8: StageR2SDF_8.self_t_const;
        stages_9: StageR2SDF_9.self_t_const;
        stages_10: StageR2SDF_10.self_t_const;
        stages_11: StageR2SDF_11.self_t_const;
        stages_12: StageR2SDF_12.self_t_const;
        GAIN_CORRECTION: sfixed(0 downto -17);
        DELAY: integer;
        \out\: DataWithIndex_0.self_t_const;
    end record;
    type R2SDF_1_self_t_const_list_t_const is array (natural range <>) of R2SDF_1.self_t_const;

    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; x: DataWithIndex_0.self_t; ret_0:out DataWithIndex_0.self_t);
    function R2SDF(stages_0: StageR2SDF_0.self_t;stages_1: StageR2SDF_1.self_t;stages_2: StageR2SDF_2.self_t;stages_3: StageR2SDF_3.self_t;stages_4: StageR2SDF_4.self_t;stages_5: StageR2SDF_5.self_t;stages_6: StageR2SDF_6.self_t;stages_7: StageR2SDF_7.self_t;stages_8: StageR2SDF_8.self_t;stages_9: StageR2SDF_9.self_t;stages_10: StageR2SDF_10.self_t;stages_11: StageR2SDF_11.self_t;stages_12: StageR2SDF_12.self_t; \out\: DataWithIndex_0.self_t) return self_t;
end package;

package body R2SDF_1 is
    procedure main(self:in self_t; self_next:inout self_t; constant self_const: self_t_const; x: DataWithIndex_0.self_t; ret_0:out DataWithIndex_0.self_t) is

        variable stage: StageR2SDF_12.self_t;
        variable out_index: integer;
        variable \out\: complex_t(1 downto -34);
        variable pyha_ret_0: complex_t(1 downto -34);
        variable pyha_ret_1: integer;
        variable pyha_ret_2: complex_t(1 downto -34);
        variable pyha_ret_3: integer;
        variable pyha_ret_4: complex_t(1 downto -34);
        variable pyha_ret_5: integer;
        variable pyha_ret_6: complex_t(1 downto -34);
        variable pyha_ret_7: integer;
        variable pyha_ret_8: complex_t(1 downto -34);
        variable pyha_ret_9: integer;
        variable pyha_ret_10: complex_t(1 downto -34);
        variable pyha_ret_11: integer;
        variable pyha_ret_12: complex_t(1 downto -34);
        variable pyha_ret_13: integer;
        variable pyha_ret_14: complex_t(1 downto -34);
        variable pyha_ret_15: integer;
        variable pyha_ret_16: complex_t(1 downto -34);
        variable pyha_ret_17: integer;
        variable pyha_ret_18: complex_t(1 downto -34);
        variable pyha_ret_19: integer;
        variable pyha_ret_20: complex_t(1 downto -34);
        variable pyha_ret_21: integer;
        variable pyha_ret_22: complex_t(1 downto -34);
        variable pyha_ret_23: integer;
        variable pyha_ret_24: complex_t(1 downto -34);
        variable pyha_ret_25: integer;
    begin
        -- execute stages
        \out\ := resize(x.data, 0, -17, fixed_wrap, fixed_round);
        out_index := x.index;
        for \_i_\ in self.stages'range loop
            if True then
                if \_i_\ = 0 then
                    StageR2SDF_0.main(self.stages_0, self_next.stages_0, self_const.stages_0, \out\, out_index, pyha_ret_0, pyha_ret_1);
                    \out\ := resize(pyha_ret_0, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_1;
                elsif \_i_\ = 1 then
                    StageR2SDF_1.main(self.stages_1, self_next.stages_1, self_const.stages_1, \out\, out_index, pyha_ret_2, pyha_ret_3);
                    \out\ := resize(pyha_ret_2, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_3;
                elsif \_i_\ = 2 then
                    StageR2SDF_2.main(self.stages_2, self_next.stages_2, self_const.stages_2, \out\, out_index, pyha_ret_4, pyha_ret_5);
                    \out\ := resize(pyha_ret_4, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_5;
                elsif \_i_\ = 3 then
                    StageR2SDF_3.main(self.stages_3, self_next.stages_3, self_const.stages_3, \out\, out_index, pyha_ret_6, pyha_ret_7);
                    \out\ := resize(pyha_ret_6, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_7;
                elsif \_i_\ = 4 then
                    StageR2SDF_4.main(self.stages_4, self_next.stages_4, self_const.stages_4, \out\, out_index, pyha_ret_8, pyha_ret_9);
                    \out\ := resize(pyha_ret_8, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_9;
                elsif \_i_\ = 5 then
                    StageR2SDF_5.main(self.stages_5, self_next.stages_5, self_const.stages_5, \out\, out_index, pyha_ret_10, pyha_ret_11);
                    \out\ := resize(pyha_ret_10, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_11;
                elsif \_i_\ = 6 then
                    StageR2SDF_6.main(self.stages_6, self_next.stages_6, self_const.stages_6, \out\, out_index, pyha_ret_12, pyha_ret_13);
                    \out\ := resize(pyha_ret_12, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_13;
                elsif \_i_\ = 7 then
                    StageR2SDF_7.main(self.stages_7, self_next.stages_7, self_const.stages_7, \out\, out_index, pyha_ret_14, pyha_ret_15);
                    \out\ := resize(pyha_ret_14, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_15;
                elsif \_i_\ = 8 then
                    StageR2SDF_8.main(self.stages_8, self_next.stages_8, self_const.stages_8, \out\, out_index, pyha_ret_16, pyha_ret_17);
                    \out\ := resize(pyha_ret_16, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_17;
                elsif \_i_\ = 9 then
                    StageR2SDF_9.main(self.stages_9, self_next.stages_9, self_const.stages_9, \out\, out_index, pyha_ret_18, pyha_ret_19);
                    \out\ := resize(pyha_ret_18, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_19;
                elsif \_i_\ = 10 then
                    StageR2SDF_10.main(self.stages_10, self_next.stages_10, self_const.stages_10, \out\, out_index, pyha_ret_20, pyha_ret_21);
                    \out\ := resize(pyha_ret_20, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_21;
                elsif \_i_\ = 11 then
                    StageR2SDF_11.main(self.stages_11, self_next.stages_11, self_const.stages_11, \out\, out_index, pyha_ret_22, pyha_ret_23);
                    \out\ := resize(pyha_ret_22, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_23;
                elsif \_i_\ = 12 then
                    StageR2SDF_12.main(self.stages_12, self_next.stages_12, self_const.stages_12, \out\, out_index, pyha_ret_24, pyha_ret_25);
                    \out\ := resize(pyha_ret_24, 0, -17, fixed_wrap, fixed_round);
                    out_index := pyha_ret_25;
                end if;
            end if;

        end loop;
        self_next.\out\.data := resize(\out\, 0, -17, fixed_wrap, fixed_round);
        self_next.\out\.index := (out_index + 1) mod self_const.FFT_SIZE;
        self_next.\out\.valid := x.valid;
        ret_0 := self.\out\;
        return;
    end procedure;

    function R2SDF(stages_0: StageR2SDF_0.self_t;stages_1: StageR2SDF_1.self_t;stages_2: StageR2SDF_2.self_t;stages_3: StageR2SDF_3.self_t;stages_4: StageR2SDF_4.self_t;stages_5: StageR2SDF_5.self_t;stages_6: StageR2SDF_6.self_t;stages_7: StageR2SDF_7.self_t;stages_8: StageR2SDF_8.self_t;stages_9: StageR2SDF_9.self_t;stages_10: StageR2SDF_10.self_t;stages_11: StageR2SDF_11.self_t;stages_12: StageR2SDF_12.self_t; \out\: DataWithIndex_0.self_t) return self_t is
        -- limited constructor
        variable self: self_t;
    begin
        self.stages_0 := stages_0;
        self.stages_1 := stages_1;
        self.stages_2 := stages_2;
        self.stages_3 := stages_3;
        self.stages_4 := stages_4;
        self.stages_5 := stages_5;
        self.stages_6 := stages_6;
        self.stages_7 := stages_7;
        self.stages_8 := stages_8;
        self.stages_9 := stages_9;
        self.stages_10 := stages_10;
        self.stages_11 := stages_11;
        self.stages_12 := stages_12;
        self.\out\ := \out\;
        return self;
    end function;
end package body;
